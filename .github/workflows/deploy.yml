name: CI/CD Pipeline

on:
  push:
    branches: [main, dev, feature/**]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - name: Run ESLint
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - name: Run tests
        run: npm test -- --ci --watchAll=false

  build:
    runs-on: ubuntu-latest
    needs: test
    env:
      VITE_WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
      VITE_NEWS_API_KEY: ${{ secrets.NEWS_API_KEY }}
      VITE_STOCK_API_KEY: ${{ secrets.STOCK_API_KEY }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - name: Build project
        run: npm run build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: site-build
          path: dist

  screenshot:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - name: Install Playwright
        run: npx playwright install
      - name: Run screenshot script
        run: npx playwright test screenshot.spec.js
      - name: Upload screenshot artifact
        uses: actions/upload-artifact@v4
        with:
          name: screenshot
          path: docs/screenshots/dashboard.png

  deploy-production:
    runs-on: ubuntu-latest
    needs: [build, screenshot]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: site-build
          path: dist
      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: ./dist
          production-deploy: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
