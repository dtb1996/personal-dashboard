name: CI/CD Pipeline

on:
  push:
    branches: [main, dev, feature/**]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - name: Run ESLint
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - name: Run tests
        run: npm test -- --ci --watchAll=false

  build:
    runs-on: ubuntu-latest
    needs: test
    env:
      VITE_WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
      VITE_NEWS_API_KEY: ${{ secrets.NEWS_API_KEY }}
      VITE_STOCK_API_KEY: ${{ secrets.STOCK_API_KEY}}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - name: Build project
        run: npm run build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: site-build
          path: dist

      - name: Run Playwright screenshot
        if: github.ref == 'refs/heads/main'
        uses: actions/setup-node@v4
        with:
          node-version: 20
        run: |
          npm ci
          npx playwright install
          npx playwright test screenshot.spec.js

  deploy-production:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: site-build
          path: dist

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: ./dist
          production-deploy: true
          enable-pull-request-deploy: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  deploy-preview:
    needs: build
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: site-build
          path: dist

      - name: Deploy PR preview to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: dist
          destination_dir: pr-${{ github.event.pull_request.number }}
          force_orphan: true
          keep_files: false

      - name: Comment preview link on PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            Preview available:  
            https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/pr-${{ github.event.pull_request.number }}/

  cleanup-preview:
    if: github.event.pull_request.merged == true || github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Remove PR preview from GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./empty
          destination_dir: pr-${{ github.event.pull_request.number }}

      - name: Comment cleanup on PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            Preview for PR #${{ github.event.pull_request.number }} has been removed.
